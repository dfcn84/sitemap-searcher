{"ast":null,"code":"var _jsxFileName = \"/disk2/sitemap-searcher/src/App.js\";\nimport { useState, useEffect } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      urls: [],\n      searchTerm: \"\"\n    };\n\n    this.onSearch = event => {\n      let keyword = event.target.value;\n      console.log(\"keyword\", keyword);\n      this.setState({\n        searchTerm: keyword\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\").then(res => res.text()).then(data => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n      parser.parseString(data, function (err, result) {\n        jsondata = result;\n      });\n      this.setState({\n        urls: jsondata.urlset.url\n      });\n    });\n  }\n\n  render() {\n    console.log(\"ST\", this.state.searchTerm);\n    var filteredUrls = this.state.urls.filter(url => {\n      if (this.state.searchTerm == null) return url;\n      return url.loc.includes(this.state.searchTerm);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchTerm: this.state.searchTerm,\n        onSearch: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Sitemap, {\n        urls: filteredUrls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/disk2/sitemap-searcher/src/App.js"],"names":["useState","useEffect","xml2js","SearchBar","Sitemap","Component","App","state","urls","searchTerm","onSearch","event","keyword","target","value","console","log","setState","componentDidMount","fetch","then","res","text","data","parser","Parser","jsondata","parseString","err","result","urlset","url","render","filteredUrls","filter","loc","includes"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,UAAU,EAAE;AAFN,KADkB;;AAAA,SAM1BC,QAN0B,GAMdC,KAAD,IAAW;AACpB,UAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;AACA,WAAKK,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAEG;AAAd,OAAd;AACD,KAVyB;AAAA;;AAa1BM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,UAAIC,MAAM,GAAG,IAAItB,MAAM,CAACuB,MAAX,EAAb;AACA,UAAIC,QAAQ,GAAG,EAAf;AAEAF,MAAAA,MAAM,CAACG,WAAP,CAAmBJ,IAAnB,EAAyB,UAAUK,GAAV,EAAeC,MAAf,EAAuB;AAC5CH,QAAAA,QAAQ,GAAGG,MAAX;AACH,OAFD;AAGA,WAAKZ,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEkB,QAAQ,CAACI,MAAT,CAAgBC;AAAxB,OAAd;AACD,KAVD;AAaD;;AAGDC,EAAAA,MAAM,GAAI;AACRjB,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB,KAAKT,KAAL,CAAWE,UAA5B;AACA,QAAIwB,YAAY,GAAI,KAAK1B,KAAL,CAAWC,IAAX,CAAgB0B,MAAhB,CAAuBH,GAAG,IAAI;AAChD,UAAG,KAAKxB,KAAL,CAAWE,UAAX,IAAyB,IAA5B,EACE,OAAOsB,GAAP;AACF,aACEA,GAAG,CAACI,GAAJ,CAAQC,QAAR,CAAiB,KAAK7B,KAAL,CAAWE,UAA5B,CADF;AAGC,KANiB,CAApB;AAQA,wBACE;AAAA,8BACA,QAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAAlC;AAA8C,QAAA,QAAQ,EAAE,KAAKC;AAA7D;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEuB;AAAf;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADF;AAMD;;AA9CyB;;AAkD5B,eAAe3B,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    urls: [],\n    searchTerm: \"\"\n  }\n\n  onSearch = (event) => {\n    let keyword = event.target.value;\n    console.log(\"keyword\", keyword);\n    this.setState({ searchTerm: keyword} )\n  }\n\n\n  componentDidMount() {\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\n    .then(res => res.text())\n    .then((data) => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n    \n      parser.parseString(data, function (err, result) {\n          jsondata = result;\n      }); \n      this.setState({ urls: jsondata.urlset.url });\n    });\n\n\n  }  \n\n\n  render () {\n    console.log(\"ST\",this.state.searchTerm );\n    var filteredUrls =  this.state.urls.filter(url => {\n      if(this.state.searchTerm == null)\n        return url;\n      return (\n        url.loc.includes(this.state.searchTerm)\n      );\n      }\n    );\n    return (\n      <>\n      <SearchBar searchTerm={this.state.searchTerm} onSearch={this.onSearch} />\n      <Sitemap urls={filteredUrls} />\n      </>\n    );\n  }  \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}