{"ast":null,"code":"var _jsxFileName = \"/work/sitemap-searcher/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [urls, setUrls] = useState({});\n  const [filteredUrls, setFilteredUrls] = useState({});\n  useEffect(() => {\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\").then(res => res.text()).then(data => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n      parser.parseString(data, function (err, result) {\n        jsondata = result;\n      });\n      setUrls(jsondata.urlset.url);\n      console.log(\"jp\", JSON.parse(jsondata.urlset.url));\n      console.log(\"np\", jsondata.urlset.url);\n    });\n  });\n  useEffect(() => {\n    setFilteredUrls(urls.filter(url => {\n      if (searchTerm == \"\") return url;else {\n        return url.loc.toString().includes(searchTerm);\n      }\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: searchTerm,\n      onSearch: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sitemap, {\n      urls: filteredUrls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"C3KZZEHwhi9PhN41IvlLoHspt3Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/work/sitemap-searcher/src/App.js"],"names":["useState","useEffect","xml2js","SearchBar","Sitemap","Component","App","searchTerm","setSearchTerm","urls","setUrls","filteredUrls","setFilteredUrls","fetch","then","res","text","data","parser","Parser","jsondata","parseString","err","result","urlset","url","console","log","JSON","parse","filter","loc","toString","includes"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbY,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,UAAIC,MAAM,GAAG,IAAIhB,MAAM,CAACiB,MAAX,EAAb;AACA,UAAIC,QAAQ,GAAG,EAAf;AAEAF,MAAAA,MAAM,CAACG,WAAP,CAAmBJ,IAAnB,EAAyB,UAAUK,GAAV,EAAeC,MAAf,EAAuB;AAC5CH,QAAAA,QAAQ,GAAGG,MAAX;AACH,OAFD;AAGAb,MAAAA,OAAO,CAACU,QAAQ,CAACI,MAAT,CAAgBC,GAAjB,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBC,IAAI,CAACC,KAAL,CAAWT,QAAQ,CAACI,MAAT,CAAgBC,GAA3B,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBP,QAAQ,CAACI,MAAT,CAAgBC,GAAjC;AAED,KAbD;AAcD,GAfQ,CAAT;AAgBAxB,EAAAA,SAAS,CAAC,MAAK;AACbW,IAAAA,eAAe,CAACH,IAAI,CAACqB,MAAL,CAAYL,GAAG,IAAI;AACjC,UAAIlB,UAAU,IAAI,EAAlB,EACA,OAAOkB,GAAP,CADA,KAEK;AACH,eACEA,GAAG,CAACM,GAAJ,CAAQC,QAAR,GAAmBC,QAAnB,CAA4B1B,UAA5B,CADF;AAGD;AACF,KARe,CAAD,CAAf;AASD,GAVQ,CAAT;AAYA,sBACI;AAAA,4BACA,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEA,UAAvB;AAAmC,MAAA,QAAQ,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEG;AAAf;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAOD;;GAxCQL,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\n\nimport { Component } from 'react';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [urls, setUrls] = useState({});\n  const [filteredUrls, setFilteredUrls] = useState({});\n\n  useEffect(() =>{\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\n    .then(res => res.text())\n    .then((data) => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n    \n      parser.parseString(data, function (err, result) {\n          jsondata = result;\n      }); \n      setUrls(jsondata.urlset.url);\n      console.log(\"jp\",JSON.parse(jsondata.urlset.url));\n      console.log(\"np\",jsondata.urlset.url);\n\n    });\n  });\n  useEffect(() =>{\n    setFilteredUrls(urls.filter(url => {\n      if (searchTerm == \"\")\n      return url;\n      else {\n        return (\n          url.loc.toString().includes(searchTerm)\n        );\n      }\n    }));\n  });\n\n  return (\n      <>\n      <SearchBar searchTerm={searchTerm} onSearch={setSearchTerm} />\n      <Sitemap urls={filteredUrls} />\n      </>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}