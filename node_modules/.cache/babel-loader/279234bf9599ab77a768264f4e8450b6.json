{"ast":null,"code":"import _slicedToArray from\"/work/sitemap-searcher/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useCallback}from'react';import xml2js from'xml2js';import SearchBar from'./searchBar';import Sitemap from'./sitemap';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),urls=_useState4[0],setUrls=_useState4[1];var filteredUrls=urls.filter(function(url){if(searchTerm===\"\")return url;else{return url.loc.toString().includes(searchTerm);}});var fetchSitemap=useCallback(function(){fetch(\"https://www.smu.edu.sg/sitemap.xml\").then(function(res){return res.text();}).then(function(data){var parser=new xml2js.Parser();var jsondata='';parser.parseString(data,function(err,result){jsondata=result;});setUrls(jsondata.urlset.url);});},[]);useEffect(function(){fetchSitemap();},[fetchSitemap]);/*\n  useEffect(() =>{   \n      setFilteredUrls(urls.filter(url => {\n        console.log(\"searchTerm\",searchTerm);\n        if (searchTerm == \"\")\n        return url;\n        else {\n          return (\n            url.loc.toString().includes(searchTerm)\n          );\n        }\n      }));  \n  },[fetchSitemap,urls,searchTerm]);\n*/return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SearchBar,{searchTerm:searchTerm,onSearch:setSearchTerm}),/*#__PURE__*/_jsx(Sitemap,{urls:filteredUrls})]});}export default App;","map":{"version":3,"sources":["/work/sitemap-searcher/src/App.js"],"names":["useState","useEffect","useCallback","xml2js","SearchBar","Sitemap","App","searchTerm","setSearchTerm","urls","setUrls","filteredUrls","filter","url","loc","toString","includes","fetchSitemap","fetch","then","res","text","data","parser","Parser","jsondata","parseString","err","result","urlset"],"mappings":"6IAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,6IAEA,QAASC,CAAAA,GAAT,EAAe,eACuBN,QAAQ,CAAC,EAAD,CAD/B,wCACNO,UADM,eACMC,aADN,8BAEWR,QAAQ,CAAC,EAAD,CAFnB,yCAENS,IAFM,eAEAC,OAFA,eAIb,GAAMC,CAAAA,YAAY,CAAGF,IAAI,CAACG,MAAL,CAAY,SAAAC,GAAG,CAAI,CACtC,GAAIN,UAAU,GAAK,EAAnB,CACE,MAAOM,CAAAA,GAAP,CADF,IAEK,CACH,MACEA,CAAAA,GAAG,CAACC,GAAJ,CAAQC,QAAR,GAAmBC,QAAnB,CAA4BT,UAA5B,CADF,CAGD,CACF,CARoB,CAArB,CAUA,GAAMU,CAAAA,YAAY,CAAGf,WAAW,CAAC,UAAK,CACpCgB,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAACG,IAAD,CAAU,CACd,GAAIC,CAAAA,MAAM,CAAG,GAAIpB,CAAAA,MAAM,CAACqB,MAAX,EAAb,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEAF,MAAM,CAACG,WAAP,CAAmBJ,IAAnB,CAAyB,SAAUK,GAAV,CAAeC,MAAf,CAAuB,CAC5CH,QAAQ,CAAGG,MAAX,CACH,CAFD,EAGAlB,OAAO,CAACe,QAAQ,CAACI,MAAT,CAAgBhB,GAAjB,CAAP,CACD,CAVD,EAWD,CAZ+B,CAY9B,EAZ8B,CAAhC,CAcAZ,SAAS,CAAC,UAAK,CACbgB,YAAY,GACb,CAFQ,CAEN,CAACA,YAAD,CAFM,CAAT,CAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACE,mBACI,wCACA,KAAC,SAAD,EAAW,UAAU,CAAEV,UAAvB,CAAmC,QAAQ,CAAEC,aAA7C,EADA,cAEA,KAAC,OAAD,EAAS,IAAI,CAAEG,YAAf,EAFA,GADJ,CAOD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [urls, setUrls] = useState([]);\n\n  const filteredUrls = urls.filter(url => {\n    if (searchTerm === \"\")\n      return url;\n    else {\n      return (\n        url.loc.toString().includes(searchTerm)\n      );\n    }\n  });\n\n  const fetchSitemap = useCallback(() =>{\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\n    .then(res => res.text())\n    .then((data) => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n    \n      parser.parseString(data, function (err, result) {\n          jsondata = result;\n      }); \n      setUrls(jsondata.urlset.url);\n    });\n  },[]);\n\n  useEffect(() =>{  \n    fetchSitemap();\n  }, [fetchSitemap]);\n  \n  /*\n  useEffect(() =>{   \n      setFilteredUrls(urls.filter(url => {\n        console.log(\"searchTerm\",searchTerm);\n        if (searchTerm == \"\")\n        return url;\n        else {\n          return (\n            url.loc.toString().includes(searchTerm)\n          );\n        }\n      }));  \n  },[fetchSitemap,urls,searchTerm]);\n*/\n  return (\n      <>\n      <SearchBar searchTerm={searchTerm} onSearch={setSearchTerm} />\n      <Sitemap urls={filteredUrls} />\n      </>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}