{"ast":null,"code":"var _jsxFileName = \"/disk2/sitemap-searcher/src/Sitemap.js\";\nimport ReactDOM from 'react-dom';\nimport xml2js from 'xml2js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sitemap() {\n  var sitemapJson = '';\n  fetch(\"https://www.smu.edu.sg/sitemap.xml\").then(res => res.text()).then(xmldata => {\n    var parser = new xml2js.Parser();\n    let json = '';\n    parser.parseString(xmldata, function (err, result) {\n      json = result;\n    });\n  }).then(json => sitemapJson = json);\n  ;\n  console.log(\"JSON\", sitemapJson);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sitemap content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Sitemap;\nexport default Sitemap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sitemap\");","map":{"version":3,"sources":["/disk2/sitemap-searcher/src/Sitemap.js"],"names":["ReactDOM","xml2js","Sitemap","sitemapJson","fetch","then","res","text","xmldata","parser","Parser","json","parseString","err","result","console","log"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,SAASC,OAAT,GAAmB;AACf,MAAIC,WAAW,GAAG,EAAlB;AACAC,EAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,OAAO,IAAI;AACb,QAAIC,MAAM,GAAG,IAAIR,MAAM,CAACS,MAAX,EAAb;AACA,QAAIC,IAAI,GAAG,EAAX;AACAF,IAAAA,MAAM,CAACG,WAAP,CAAmBJ,OAAnB,EAA4B,UAAUK,GAAV,EAAeC,MAAf,EAAuB;AAC/CH,MAAAA,IAAI,GAAGG,MAAP;AACH,KAFD;AAGH,GARL,EASKT,IATL,CASUM,IAAI,IAAIR,WAAW,GAAGQ,IAThC;AAUI;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,WAApB;AACJ,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KAjBQD,O;AAmBT,eAAeA,OAAf","sourcesContent":["import ReactDOM from 'react-dom';\r\nimport xml2js from 'xml2js';\r\n\r\nfunction Sitemap() {\r\n    var sitemapJson = '';\r\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\r\n        .then(res => res.text())\r\n        .then(xmldata => {\r\n            var parser = new xml2js.Parser();\r\n            let json = '';\r\n            parser.parseString(xmldata, function (err, result) {\r\n                json = result;\r\n            })\r\n        })\r\n        .then(json => sitemapJson = json);\r\n        ;\r\n        console.log(\"JSON\", sitemapJson);        \r\n    return (\r\n        <p>Sitemap content</p>\r\n    );\r\n}\r\n\r\nexport default Sitemap;"]},"metadata":{},"sourceType":"module"}