{"ast":null,"code":"var _jsxFileName = \"/disk2/sitemap-searcher/src/App.js\";\nimport { useState, useEffect } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      urls: [],\n      filteredUrls: [],\n      searchTerm: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\").then(res => res.text()).then(data => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n      parser.parseString(data, function (err, result) {\n        jsondata = result;\n      });\n      this.setState({\n        urls: jsondata.urlset.url\n      });\n    });\n    this.setState({\n      filteredUrls: this.state.urls.filter(url => {\n        console.log(\"url\", url);\n        return url.loc.includes(\"node\");\n      })\n    });\n    console.log(this.state.filteredUrls);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchTerm: this.state.searchTerm,\n        onSearch: mySearch => this.setState({\n          searchTerm: this.state.searchTerm\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Sitemap, {\n        urls: this.state.filteredUrls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/disk2/sitemap-searcher/src/App.js"],"names":["useState","useEffect","xml2js","SearchBar","Sitemap","Component","App","state","urls","filteredUrls","searchTerm","componentDidMount","fetch","then","res","text","data","parser","Parser","jsondata","parseString","err","result","setState","urlset","url","filter","console","log","loc","includes","render","mySearch"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,UAAU,EAAE;AAHN,KADkB;AAAA;;AAQ1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,UAAIC,MAAM,GAAG,IAAIf,MAAM,CAACgB,MAAX,EAAb;AACA,UAAIC,QAAQ,GAAG,EAAf;AAEAF,MAAAA,MAAM,CAACG,WAAP,CAAmBJ,IAAnB,EAAyB,UAAUK,GAAV,EAAeC,MAAf,EAAuB;AAC5CH,QAAAA,QAAQ,GAAGG,MAAX;AACH,OAFD;AAGA,WAAKC,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAEW,QAAQ,CAACK,MAAT,CAAgBC;AAAxB,OAAd;AACD,KAVD;AAYA,SAAKF,QAAL,CAAc;AAAEd,MAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWC,IAAX,CAAgBkB,MAAhB,CAC5BD,GAAG,IAAI;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AAEA,eACEA,GAAG,CAACI,GAAJ,CAAQC,QAAR,CAAiB,MAAjB,CADF;AAGD,OAP2B;AAAhB,KAAd;AAUAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWE,YAAvB;AAED;;AAEDsB,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACA,QAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWG,UAAlC;AAA8C,QAAA,QAAQ,EAAEsB,QAAQ,IAAI,KAAKT,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWG;AAAzB,SAAd;AAApE;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADF;AAMD;;AA1CyB;;AA8C5B,eAAeH,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    urls: [],\n    filteredUrls: [],\n    searchTerm: \"\"\n  }\n\n\n  componentDidMount() {\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\n    .then(res => res.text())\n    .then((data) => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n    \n      parser.parseString(data, function (err, result) {\n          jsondata = result;\n      }); \n      this.setState({ urls: jsondata.urlset.url });\n    });\n\n    this.setState({ filteredUrls: this.state.urls.filter(\n      url => {\n        console.log(\"url\", url);\n\n        return (\n          url.loc.includes(\"node\")\n        );\n      }\n    )});\n\n    console.log(this.state.filteredUrls)\n\n  }  \n\n  render () {\n    return (\n      <>\n      <SearchBar searchTerm={this.state.searchTerm} onSearch={mySearch => this.setState({ searchTerm: this.state.searchTerm})} />\n      <Sitemap urls={this.state.filteredUrls} />\n      </>\n    );\n  }  \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}