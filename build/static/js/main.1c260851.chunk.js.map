{"version":3,"sources":["searchBar.js","sitemap.js","App.js","index.js"],"names":["searchBar","searchTerm","onSearch","className","htmlFor","type","onChange","event","id","aria-describedby","placeholder","Sitemap","urls","scope","map","url","i","loc","changefreq","App","state","keyword","target","value","setState","fetch","then","res","text","data","parser","xml2js","Parser","jsondata","parseString","err","result","urlset","filteredUrls","this","filter","toString","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAUeA,MAVf,YAA4C,EAAvBC,WAAwB,IAAZC,EAAW,EAAXA,SAC7B,OACI,sBAAKC,UAAU,aAAf,UACI,uBAAOC,QAAQ,UAAf,4BACA,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAWL,EAASK,IAASJ,UAAU,eAAeK,GAAG,UAAUC,mBAAiB,cAAcC,YAAY,uBAC5I,uBAAOF,GAAG,cAAcL,UAAU,uBAAlC,2DCoBGQ,MAzBf,YAA0B,IAARC,EAAO,EAAPA,KACd,OACI,qBAAKT,UAAU,eAAf,SACI,wBAAOA,UAAU,kCAAjB,UACI,gCACI,+BACI,oBAAIU,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mCAGR,gCACMD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACP,+BACI,6BAAKD,EAAIE,MACT,6BAAKF,EAAIG,eAFJF,cC2ClBG,E,4MAhDbC,MAAQ,CACNR,KAAM,GACNX,WAAY,I,EAGdC,SAAW,SAACK,GACV,IAAIc,EAAUd,EAAMe,OAAOC,MAC3B,EAAKC,SAAS,CAAEvB,WAAYoB,K,uDAI9B,WAAqB,IAAD,OAClBI,MAAM,sCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,IAAIC,EAAS,IAAIC,IAAOC,OACpBC,EAAW,GAEfH,EAAOI,YAAYL,GAAM,SAAUM,EAAKC,GACpCH,EAAWG,KAEf,EAAKZ,SAAS,CAAEZ,KAAMqB,EAASI,OAAOtB,W,oBAK1C,WAAW,IAAD,OACFuB,EAAeC,KAAKnB,MAAMR,KAAK4B,QAAO,SAAAzB,GAC1C,MAA6B,IAAzB,EAAKK,MAAMnB,WACRc,EAIHA,EAAIE,IAAIwB,WAAWC,SAAS,EAAKtB,MAAMnB,eAK7C,OACE,qCACA,cAAC,EAAD,CAAWA,WAAYsC,KAAKnB,MAAMnB,WAAYC,SAAUqC,KAAKrC,WAC7D,cAAC,EAAD,CAASU,KAAM0B,W,GA1CHK,aCAlBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c260851.chunk.js","sourcesContent":["function searchBar({ searchTerm, onSearch}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"keyword\">Search Keyword</label>\r\n            <input type=\"text\" onChange={(event) => {onSearch(event)}} className=\"form-control\" id=\"keyword\" aria-describedby=\"keywordHelp\" placeholder=\"Search partial URL\" />\r\n            <small id=\"keywordHelp\" className=\"form-text text-muted\">Enter part of the URL you are looking for</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default searchBar;","function Sitemap({urls}) {\r\n    return (\r\n        <div className=\"sitemap-urls\">\r\n            <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">URLs</th>\r\n                        <th scope=\"col\">Change Frequency</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { urls.map((url, i) => (\r\n                        <tr key={i}>\r\n                            <td>{url.loc}</td>\r\n                            <td>{url.changefreq}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Sitemap;","import xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    urls: [],\n    searchTerm: \"\"\n  }\n\n  onSearch = (event) => {\n    let keyword = event.target.value;\n    this.setState({ searchTerm: keyword} )\n  }\n\n\n  componentDidMount() {\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\n    .then(res => res.text())\n    .then((data) => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n    \n      parser.parseString(data, function (err, result) {\n          jsondata = result;\n      }); \n      this.setState({ urls: jsondata.urlset.url });\n    });\n  }  \n\n\n  render () {\n    const filteredUrls = this.state.urls.filter(url => {\n      if (this.state.searchTerm == \"\")\n      return url;\n      else {\n\n        return (\n          url.loc.toString().includes(this.state.searchTerm)\n        );\n      }\n    });\n\n    return (\n      <>\n      <SearchBar searchTerm={this.state.searchTerm} onSearch={this.onSearch} />\n      <Sitemap urls={filteredUrls} />\n      </>\n    );\n  }  \n\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}