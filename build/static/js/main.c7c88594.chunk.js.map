{"version":3,"sources":["searchBar.js","sitemap.js","App.js","index.js"],"names":["searchBar","searchTerm","onSearch","className","htmlFor","type","value","onChange","event","target","id","aria-describedby","placeholder","Sitemap","urls","scope","map","url","i","loc","changefreq","App","useState","setSearchTerm","setUrls","filteredUrls","filter","toString","includes","fetchSitemap","useCallback","fetch","then","res","text","data","parser","xml2js","Parser","jsondata","parseString","err","result","urlset","useEffect","ReactDOM","render","document","getElementById"],"mappings":"uQAUeA,MAVf,YAA6C,IAAxBC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,SAC7B,OACI,sBAAKC,UAAU,aAAf,UACI,uBAAOC,QAAQ,UAAf,4BACA,uBAAOC,KAAK,OAAOC,MAAOL,EAAYM,SAAU,SAACC,GAAWN,EAASM,EAAMC,OAAOH,QAASH,UAAU,eAAeO,GAAG,UAAUC,mBAAiB,cAAcC,YAAY,uBAC5K,uBAAOF,GAAG,cAAcP,UAAU,uBAAlC,2DCoBGU,MAzBf,YAA0B,IAARC,EAAO,EAAPA,KACd,OACI,qBAAKX,UAAU,eAAf,SACI,wBAAOA,UAAU,kCAAjB,UACI,gCACI,+BACI,oBAAIY,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mCAGR,gCACED,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACH,+BACI,6BAAKD,EAAIE,MACT,6BAAKF,EAAIG,eAFJF,cCgDlBG,MAvDf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNrB,EADM,KACMsB,EADN,OAEWD,mBAAS,IAFpB,mBAENR,EAFM,KAEAU,EAFA,KAIPC,EAAeX,EAAKY,QAAO,SAAAT,GAC/B,MAAmB,KAAfhB,EACKgB,EAGLA,EAAIE,IAAIQ,WAAWC,SAAS3B,MAK5B4B,EAAeC,uBAAY,WAC/BC,MAAM,sCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,IAAIC,EAAS,IAAIC,IAAOC,OACpBC,EAAW,GAEfH,EAAOI,YAAYL,GAAM,SAAUM,EAAKC,GACpCH,EAAWG,KAEflB,EAAQe,EAASI,OAAO1B,UAE1B,IAoBF,OAlBA2B,qBAAU,WACRf,MACC,CAACA,IAiBA,qCACA,cAAC,EAAD,CAAW5B,WAAYA,EAAYC,SAAUqB,IAC7C,cAAC,EAAD,CAAST,KAAMW,QChDrBoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c7c88594.chunk.js","sourcesContent":["function searchBar({ searchTerm, onSearch}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"keyword\">Search Keyword</label>\r\n            <input type=\"text\" value={searchTerm} onChange={(event) => {onSearch(event.target.value)}} className=\"form-control\" id=\"keyword\" aria-describedby=\"keywordHelp\" placeholder=\"Search partial URL\" />\r\n            <small id=\"keywordHelp\" className=\"form-text text-muted\">Enter part of the URL you are looking for</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default searchBar;","function Sitemap({urls}) {\r\n    return (\r\n        <div className=\"sitemap-urls\">\r\n            <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">URLs</th>\r\n                        <th scope=\"col\">Change Frequency</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                { urls.map((url, i) => (\r\n                        <tr key={i}>\r\n                            <td>{url.loc}</td>\r\n                            <td>{url.changefreq}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Sitemap;","import { useState, useEffect, useCallback } from 'react';\nimport xml2js from 'xml2js';\nimport SearchBar from './searchBar';\nimport Sitemap from './sitemap';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [urls, setUrls] = useState([]);\n\n  const filteredUrls = urls.filter(url => {\n    if (searchTerm === \"\")\n      return url;\n    else {\n      return (\n        url.loc.toString().includes(searchTerm)\n      );\n    }\n  });\n\n  const fetchSitemap = useCallback(() =>{\n    fetch(\"https://www.smu.edu.sg/sitemap.xml\")\n    .then(res => res.text())\n    .then((data) => {\n      var parser = new xml2js.Parser();\n      var jsondata = '';\n    \n      parser.parseString(data, function (err, result) {\n          jsondata = result;\n      }); \n      setUrls(jsondata.urlset.url);\n    });\n  },[]);\n\n  useEffect(() =>{  \n    fetchSitemap();\n  }, [fetchSitemap]);\n  \n  /*\n  useEffect(() =>{   \n      setFilteredUrls(urls.filter(url => {\n        console.log(\"searchTerm\",searchTerm);\n        if (searchTerm == \"\")\n        return url;\n        else {\n          return (\n            url.loc.toString().includes(searchTerm)\n          );\n        }\n      }));  \n  },[fetchSitemap,urls,searchTerm]);\n*/\n  return (\n      <>\n      <SearchBar searchTerm={searchTerm} onSearch={setSearchTerm} />\n      <Sitemap urls={filteredUrls} />\n      </>\n    );\n\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}